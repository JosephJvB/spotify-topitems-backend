AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Spotty api'

Parameters:
  DEBUG:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  JwtSecret:
    Type: String
    Default: '{{resolve:ssm:JafJwtSecret:1}}'
    AllowedValues:
      - '{{resolve:ssm:JafJwtSecret:1}}'
  SpotifyClientId:
    Type: String
    Default: '{{resolve:ssm:JafSpotifyClientId:1}}'
    AllowedValues:
      - '{{resolve:ssm:JafSpotifyClientId:1}}'
  SpotifyClientSecret:
    Type: String
    Default: '{{resolve:ssm:JafSpotifySecret:1}}'
    AllowedValues:
      - '{{resolve:ssm:JafSpotifySecret:1}}'
  # will update this as required
  SpotifyRedirectUri:
    Type: String
    Default: https://daswxepyym8y0.cloudfront.net
    AllowedValues:
      - https://daswxepyym8y0.cloudfront.net

Globals:
  Function:
    Timeout: 15
    MemorySize: 128
    Runtime: nodejs14.x
    Environment:
      Variables:
        DEBUG: !Ref DEBUG
        JwtSecret: !Ref JwtSecret
        SpotifyClientId: !Ref SpotifyClientId
        SpotifyClientSecret: !Ref SpotifyClientSecret
        SpotifyRedirectUri: !Ref SpotifyRedirectUri

Resources:
  # in future prefer to not have table defined in same template as lambda, that's gross
  SpotifyProfileTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: SpotifyProfile
      AttributeDefinitions:
        - AttributeName: spotifyId
          AttributeType: S
      KeySchema:
        - AttributeName: spotifyId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  # lambda and gateway is fine tho
  HttpApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1
      Cors:
        AllowHeaders: "*"
        AllowMethods: "*"
        AllowOrigin: "*"
      Domain:
        DomainName: ts.jaf-unwrapped.com
        CertificateArn: arn:aws:acm:ap-southeast-2:355151872526:certificate/12c34da1-c039-4fc4-9636-05571fdb3df9
        Route53:
          HostedZoneId: Z05897963LYPVXX455E44

  SpotifyTopFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist
      Handler: functions/spotifyTop.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SpotifyProfileTable
      Events:
        GetSpotifyTop:
          Type: Api
          Properties:
            Path: /spotify/top
            Method: get
            RestApiId: !Ref HttpApiGateway
        OptionsSpotifyTop:
          Type: Api
          Properties:
            Path: /spotify/top
            Method: options
            RestApiId: !Ref HttpApiGateway

  SpotifyAudioFeaturesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist
      Handler: functions/audioFeatures.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SpotifyProfileTable
      Events:
        GetSpotifyAudioFeatures:
          Type: Api
          Properties:
            Path: /spotify/audio-features
            Method: get
            RestApiId: !Ref HttpApiGateway
        OptionsSpotifyAudioFeatures:
          Type: Api
          Properties:
            Path: /spotify/audio-features
            Method: options
            RestApiId: !Ref HttpApiGateway

Outputs:
  SpotifyProfileTable:
    Description: Store spotify records in nosql
    Value: !Ref SpotifyProfileTable
  HttpApiGateway:
    Description: ApiGateway between front end requests and backend lambda
    Value: !Ref HttpApiGateway
  SpotifyTopFunction:
    Description: Get spotify top items
    Value: !Ref SpotifyTopFunction
  SpotifyAudioFeaturesFunction:
    Description: Get spotify track audio features
    Value: !Ref SpotifyAudioFeaturesFunction